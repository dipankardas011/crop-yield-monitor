// Code generated by goa v3.13.0, DO NOT EDIT.
//
// servers service
//
// Command:
// $ goa gen github.com/dipankardas011/crop-yield-monitor/src/predict/design

package servers

import (
	"context"
)

// server handlers
type Service interface {
	// Predict implements predict.
	Predict(context.Context, *ReqPrediction) (res *Recommendations, err error)
	// GetHealth implements get health.
	GetHealth(context.Context) (res *Health, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "servers"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"predict", "get health"}

// Health is the result type of the servers service get health method.
type Health struct {
	// message
	Msg *string
}

// Recommendations is the result type of the servers service predict method.
type Recommendations struct {
	// operation successful?
	OK bool
	// processing in progress
	Waiting bool
	// error reason
	Error string
	// recommendations
	Recommendations *struct {
		Crops     *string
		NeedWater *bool
	}
}

// ReqPrediction is the payload type of the servers service predict method.
type ReqPrediction struct {
	// unique userid
	UUID string
}
