// Code generated by goa v3.12.4, DO NOT EDIT.
//
// servers client
//
// Command:
// $ goa gen github.com/dipankardas011/crop-yield-monitor/src/predict/design

package servers

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "servers" service client.
type Client struct {
	PredictEndpoint   goa.Endpoint
	GetHealthEndpoint goa.Endpoint
}

// NewClient initializes a "servers" service client given the endpoints.
func NewClient(predict, getHealth goa.Endpoint) *Client {
	return &Client{
		PredictEndpoint:   predict,
		GetHealthEndpoint: getHealth,
	}
}

// Predict calls the "predict" endpoint of the "servers" service.
func (c *Client) Predict(ctx context.Context, p *ReqPrediction) (res *Recommendations, err error) {
	var ires any
	ires, err = c.PredictEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Recommendations), nil
}

// GetHealth calls the "get health" endpoint of the "servers" service.
func (c *Client) GetHealth(ctx context.Context) (res *Health, err error) {
	var ires any
	ires, err = c.GetHealthEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*Health), nil
}
