// Code generated by goa v3.12.4, DO NOT EDIT.
//
// servers service
//
// Command:
// $ goa gen github.com/dipankardas011/crop-yield-monitor/src/images/design

package servers

import (
	"context"
)

// server handlers
type Service interface {
	// Upload implements upload.
	Upload(context.Context, *ReqUpload) (res *Response, err error)
	// Fetch implements fetch.
	Fetch(context.Context, *ReqGet) (res *Response, err error)
	// GetHealth implements get health.
	GetHealth(context.Context) (res *Health, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "servers"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"upload", "fetch", "get health"}

// Health is the result type of the servers service get health method.
type Health struct {
	// message
	Msg *string
}

// ReqGet is the payload type of the servers service fetch method.
type ReqGet struct {
	// unique userid
	UUID string
}

// ReqUpload is the payload type of the servers service upload method.
type ReqUpload struct {
	// unique userid
	UUID string
	// image in byte array
	Image []byte
}

// Response is the result type of the servers service upload method.
type Response struct {
	// operation successful?
	OK bool
	// error reason
	Error string
	// image in []byte
	Image []byte
}
