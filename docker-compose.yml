services:
  # Databases
  auth-db:
    image: auth-db
    networks:
    - backend-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  image-db:
    image: image-db
    networks:
    - backend-net
    healthcheck:
      test: ["CMD", "redis-cli", "--user", "health", "--pass", "77777", "PING"]
      timeout: 20s
      retries: 10

  recommend-db:
    image: recommend-db
    networks:
    - backend-net
    healthcheck:
      test: ["CMD", "redis-cli", "--user", "health", "--pass", "77777", "PING"]
      timeout: 20s
      retries: 10


  # backend servers
  auth:
    image: auth
    depends_on:
      auth-db:
        condition: service_healthy

    env_file:
      - .env-auth
    networks:
    - frontend-net
    - backend-net
    ports:
    - "8080:8080"

  image:
    image: image
    depends_on:
      image-db:
        condition: service_healthy
      auth-db:
        condition: service_healthy

    env_file:
      - .env-image
    networks:
    - frontend-net
    - backend-net
    ports:
    - "8090:8090"

  recommend:
    image: recommend
    depends_on:
      recommend-db:
        condition: service_healthy
      auth-db:
        condition: service_healthy
      image-db:
        condition: service_healthy

    networks:
    - backend-net
    - frontend-net
    ports:
    - "8100:8100"

  # another one for the ml workload

  # frontend server
  # one for the front end

# networks
networks:
  backend-net: {}
  frontend-net: {}
